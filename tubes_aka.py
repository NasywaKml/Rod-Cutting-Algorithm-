# -*- coding: utf-8 -*-
"""Tubes AKA

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/1wLEafkxtcmkhJBLH_B8B2205cEj0F662

##Recursive algorithm
"""

def rod_cutting_recursive(price, n):
    if n <= 0:
        return 0
    max_val = -1
    for i in range(1, n + 1):
        max_val = max(max_val, price[i - 1] + rod_cutting_recursive(price, n - i))
    return max_val

"""##Iterative algorithm"""

def rod_cutting_iterative(price, n):
    dp = [0] * (n + 1)
    for i in range(1, n + 1):
        for j in range(1, i + 1):
            if dp[i] > price[j - 1] + dp[i - j]:
                dp[i] = dp[i]
            else:
                dp[i] = price[j - 1] + dp[i - j]
    return dp[n]

"""##Check the comparison running time"""

# Test cases
price1 = [1,2,3,4,4]
n1 = 5

# Measure recursive time
start_time = time.time()
print(f"Recursive result: {rod_cutting_recursive(price1, n1)}")
end_time = time.time()
print(f"Recursive time: {end_time - start_time:.5f} detik")

# Measure iterative time
start_time = time.time()
print(f"Iterative result: {rod_cutting_iterative(price1, n1)}")
end_time = time.time()
print(f"Iterative time: {end_time - start_time:.5f} detik")